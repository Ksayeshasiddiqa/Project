# Pipeline for building a Java project, creating Docker image, and pushing to ACR

trigger:
- main   # Runs on commits to main branch

resources:
- repo: self

pool:
  name: 'agent_ayesha'
  demands:
    - agent.name -equals agent_ayesha_linux

variables:
  dockerRegistryServiceConnection: '8c952ee3-4196-455c-b905-a09224064f6f'
  imageRepository: 'ksayeshasiddiqaproject'
  containerRegistry: 'ksalinuxacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
# Stage 1: Build Java project using Maven
- stage: BuildJava
  displayName: Build Java Application
  jobs:
  - job: MavenBuild
    displayName: Maven Build
    steps:
    - task: Maven@4
      displayName: Build with Maven
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
        goals: 'clean package'
        options: '-X'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
    - task: PublishBuildArtifacts@1
      displayName: Publish JAR/WAR
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/target'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# Stage 2: Build Docker image and push to ACR
- stage: DockerBuildPush
  displayName: Build and Push Docker Image
  dependsOn: BuildJava
  jobs:
  - job: Docker
    displayName: Build & Push Docker Image
    steps:
    - task: Docker@2
      displayName: Build and push an image to ACR
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
